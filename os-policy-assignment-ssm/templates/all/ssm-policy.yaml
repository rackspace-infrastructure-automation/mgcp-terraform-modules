id: ssm-policy
mode: ENFORCEMENT
resourceGroups:
  - inventoryFilters:
    - osShortName: debian
    resources:
      - id: install-ssm
        exec:
          validate:
            interpreter: SHELL
            script: if systemctl is-active --quiet amazon-ssm-agent; then exit 100; else exit 101; fi
          enforce:
            interpreter: SHELL
            script: curl https://add-ons.manage.rackspace.com/bootstrap/gcp/install.sh | bash && exit 100
  - inventoryFilters:
    - osShortName: centos
    resources:
      - id: install-ssm
        exec:
          validate:
            interpreter: SHELL
            script: if systemctl is-active --quiet amazon-ssm-agent; then exit 100; else exit 101; fi
          enforce:
            interpreter: SHELL
            script: curl https://add-ons.manage.rackspace.com/bootstrap/gcp/install.sh | bash && exit 100
  - inventoryFilters:
    - osShortName: ubuntu
    resources:
      - id: install-ssm
        exec:
          validate:
            interpreter: SHELL
            script: if systemctl is-active --quiet amazon-ssm-agent; then exit 100; else exit 101; fi
          enforce:
            interpreter: SHELL
            script: curl https://add-ons.manage.rackspace.com/bootstrap/gcp/install.sh | bash && exit 100
  - inventoryFilters:
    - osShortName: windows
    resources:
      - id: install-ssm
        exec:
          validate:
            interpreter: POWERSHELL
            script: |
              $service = Get-Service -Name 'AmazonSSMAgent'
              if ($service.Status -eq 'Running') {exit 100} else {exit 101}
          enforce:
            interpreter: POWERSHELL
            script: |
              $SSMscript = Invoke-WebRequest -Uri "https://add-ons.manage.rackspace.com/bootstrap/gcp/gcp_bootstrap_ssm.ps1" -UseBasicParsing
              Invoke-Expression -Command $SSMscript
              exit 100